NAME
    Net::LimeLight::Purge - LimeLight Purge Service API

SYNOPSIS
      use Net::LimeLight::Purge;
      use Net::LimeLight::Purge::Request;

      my $req = Net::LimeLight::Purge::Request->new(
          shortname => 'mysite',
          url => 'http://cdn.mysite.com/static/images/foo.jpg'
      );

      my $purge = Net::LimeLight::Purge->new(
          username => 'luxuser',
          password => 'luxpass'
      );
      my $ret = $purge->create_purge_request([ $req ]);
      if($ret == -1) {
          say "Something broke!";
      } else {
          say "Successful Request: $ret";
      }

METHODS
  username

    Your LUX username.

  password

    Your LUX password.

  proxy

    The address to send SOAP requests. Defaults to
    `https://soap.llnw.net/PurgeFiles/PurgeService.asmx'.

  uri

    The uri to use for SOAP requests. Defaults to
    `http://www.llnw.com/Purge'.

  create_purge_request(\@requests, \%notification_options)

    Creates a purge request from an arrayref of
    Net::LimeLight::Purge::Request objects. Returns the unique number
    assigned to the request by LimeLight. It seems that -1 indicates a
    failure of some type. An exception is thrown if there is some type of
    SOAP error.

    The optional second argument allows passing notification options in the
    request the keys are:

    *type*
        Defaults to 'none'. Other valid values are `none', `detail', and
        `summary'. Setting this value to something other than those values
        will cause an error.

    *subject*
        The subject of the email.

    *to*
        The recipient of the email.

    *cc*
        The recipient to CC the email to.

    *bcc*
        The recipient to BCC the email to.

  get_all_purge_statuses([$detail])

    Get the status of ALL purge requests. If a true value is passed as the
    only parameter then detail will be requested rather than just counts.
    Returns a StatusResponse object. If there are errors then an exception
    is thrown.

  password

    Set/Get the password of the LUX user.

  proxy

    Set/Get the proxy address to use when communicate with the LimeLight
    service. This defaults to
    `https://soap.llnw.net/PurgeFiles/PurgeService.asmx'

  username

    Set/Get the username of the LUX user.

  uri

    Set/Get the URI used for this SOAP request. Defaults to
    `http://www.llnw.com/Purge'. This is the 'namespace' element of the SOAP
    request, not the URI that is being communicated with. Look at `proxy'
    for that.

AUTHOR
    Cory G Watson, `<gphat at cpan.org>'

BUGS
    Please report any bugs or feature requests to `bug-net-limelight-purge
    at rt.cpan.org', or through the web interface at
    http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Net-LimeLight-Purge. I
    will be notified, and then you'll automatically be notified of progress
    on your bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Net::LimeLight::Purge

    You can also look for information at:

    * RT: CPAN's request tracker
        http://rt.cpan.org/NoAuth/Bugs.html?Dist=Net-LimeLight-Purge

    * AnnoCPAN: Annotated CPAN documentation
        http://annocpan.org/dist/Net-LimeLight-Purge

    * CPAN Ratings
        http://cpanratings.perl.org/d/Net-LimeLight-Purge

    * Search CPAN
        http://search.cpan.org/dist/Net-LimeLight-Purge/

ACKNOWLEDGEMENTS
COPYRIGHT & LICENSE
    Copyright 2009 Cory G Watson, all rights reserved.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

